generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  password      String?
  email         String    @unique
  phone         String?
  image         String?
  role          Role      @default(WAITER)
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  account       Account[]
}

model Account {
  id                String  @id @default(cuid())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Table {
  id       Int     @id @default(autoincrement())
  number   Int     @unique
  capacity Int
  status   Status  @default(IDLE)
  order    Order[]
}

model Menu {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  price    Float
  category String
  order    Order[]
}

model Order {
  id       Int   @id @default(autoincrement())
  quantity Int
  tableID  Int   @map("table_id")
  table    Table @relation(fields: [tableID], references: [id], onDelete: Cascade)
  menuID   Int   @map("menu_id")
  menu     Menu  @relation(fields: [menuID], references: [id], onDelete: Cascade)
}

model Bill {
  id      Int   @id @default(autoincrement())
  price   Float
  guestID Int   @map("guest_id")
  guest   Guest @relation(fields: [guestID], references: [id], onDelete: Cascade)
}

model Guest {
  id    Int      @id @default(autoincrement())
  start DateTime
  end   DateTime
  bill  Bill[]
}

enum Role {
  MANAGER
  CHEF
  WAITER
  CASHIER
}

enum Status {
  IDLE
  EATING
  PAID
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  phone         String
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  role          Role      @default(WAITER)
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Table {
  id       String  @id @default(cuid())
  number   Int     @unique
  capacity Int
  status   Status  @default(IDLE)
  order    Order[]
}

model Menu {
  id       String   @id @default(cuid())
  name     String   @unique
  price    Float
  category Category @default(FOOD)
  order    Order[]
}

model Order {
  id       String @id @default(cuid())
  quantity Int
  tableID  String @map("table_id")
  menuID   String @map("menu_id")
  menu     Menu   @relation(fields: [menuID], references: [id], onDelete: Cascade)
  table    Table  @relation(fields: [tableID], references: [id], onDelete: Cascade)
}

model Bill {
  id      String @id @default(cuid())
  guestID String @map("guest_id")
  total   Float
  guest   Guest  @relation(fields: [guestID], references: [id], onDelete: Cascade)
}

model Guest {
  id    String   @id @default(cuid())
  start DateTime
  end   DateTime
  bill  Bill[]
}

enum Role {
  MANAGER
  CHEF
  WAITER
  CASHIER
}

enum Status {
  IDLE
  EATING
  PAID
}

enum Category {
  DRINK
  DESSERT
  FOOD
}
